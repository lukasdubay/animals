// Ionic Variables and Theming. For more info, please see:
// http://ionicframework.com/docs/v2/theming/
$font-path: "../assets/fonts";

@import "ionic.globals";


// Shared Variables
// --------------------------------------------------
// To customize the look and feel of this app, you can override
// the Sass variables found in Ionic's source scss files.
// To view all the possible Ionic variables, see:
// http://ionicframework.com/docs/v2/theming/overriding-ionic-variables/




// Named Color Variables
// --------------------------------------------------
// Named colors makes it easy to reuse colors on various components.
// It's highly recommended to change the default colors
// to match your app's branding. Ionic uses a Sass map of
// colors so you can add, rename and remove colors as needed.
// The "primary" color is the only required color in the map.
$text-color: white;
$colors: (
  primary:    #488aff,
  secondary:  #32db64,
  danger:     #f53d3d,
  light:      #f4f4f4,
  dark:       #222
);


// App iOS Variables
// --------------------------------------------------
// iOS only Sass variables can go here




// App Material Design Variables
// --------------------------------------------------
// Material Design only Sass variables can go here




// App Windows Variables
// --------------------------------------------------
// Windows only Sass variables can go here




// App Theme
// --------------------------------------------------
// Ionic apps can have different themes applied, which can
// then be future customized. This import comes last
// so that the above variables are used and Ionic's
// default are overridden.

@import "ionic.theme.default";


// Ionicons
// --------------------------------------------------
// The premium icon font for Ionic. For more info, please see:
// http://ionicframework.com/docs/v2/ionicons/

//@import "ionic.ionicons";


// Fonts
// --------------------------------------------------



@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
      -ms-transform: scale($ratio);
       -o-transform: scale($ratio);
          transform: scale($ratio);
}
@mixin animation($what...) {
  -webkit-animation: $what;
      -ms-animation: $what;
       -o-animation: $what;
          animation: $what;
}
@mixin animation-delay($delay...) {
  -webkit-animation-delay: $delay;
      -ms-animation-delay: $delay;
       -o-animation-delay: $delay;
          animation-delay: $delay;
}
@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
      -ms-transition-delay: $delay;
       -o-transition-delay: $delay;
          transition-delay: $delay;
}
@mixin rotate($ratio...) {
      -ms-transform: rotate($ratio);
       -o-transform: rotate($ratio);
          transform: rotate($ratio);
      -webkit-transform: rotate($ratio);

}
@mixin transform($what...) {
  -webkit-transform: $what;
      -ms-transform: $what;
       -o-transform: $what;
          transform: $what;
}
@mixin translate3d($x, $y, $z) {
          transform: translate3d($x, $y, $z);
  -webkit-transform: translate3d($x, $y, $z);

}
@mixin transition($transition...) {
       -o-transition: $transition;
          transition: $transition;
  -webkit-transition: $transition;

}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
     -moz-transition: -moz-transform $transition;
       -o-transition: -o-transform $transition;
          transition: transform $transition;
}
@mixin transform-origin($origin){
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}
@mixin placeholder($color) {
  &::-moz-placeholder {
    color: $color;
    opacity: 1;
  }
  &:-ms-input-placeholder { color: $color; }
  &::-webkit-input-placeholder  { color: $color; }
}
